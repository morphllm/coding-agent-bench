models:
  - name: "claude-sonnet-4"
    api_key_env: "ANTHROPIC_API_KEY"
    temperature: 0
    model_id: "claude-sonnet-4-20250514"
  - name: "claude-opus-4.1"
    api_key_env: "ANTHROPIC_API_KEY"
    temperature: 0
    model_id: "claude-opus-4-1-20250805"
  - name: "claude-opus-4"
    api_key_env: "ANTHROPIC_API_KEY"
    temperature: 0
    model_id: "claude-opus-4-20250514"
  - name: "claude-sonnet-3.7"
    api_key_env: "ANTHROPIC_API_KEY"
    temperature: 0
    model_id: "claude-3-7-sonnet-20250219"
  - name: "gpt-4o"
    api_key_env: "OPENAI_API_KEY"
    temperature: 0
    model_id: "gpt-4o-2024-11-20"

test_files:
  - path: "corpus/day.tsx"
    queries:
      - id: "add_early_return"
        prompt: "In the isInSelectingRange method, add an early return if the day is disabled when selectsDisabledDaysInRange is false"
      - id: "refactor_classnames"
        prompt: "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality."
      - id: "add_comment"
        prompt: "Add a comment at the beginning of the handleClick method explaining what it does"
      - id: "extract_constant"
        prompt: "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME"
  - path: "corpus/Canvas.ts"
    queries:
      - id: "fix_setStyle_key_collection"
        prompt: "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed."
      - id: "early_return_setStyle_no_change"
        prompt: "In the setStyle function, add an early return that exits immediately when the new style object would not modify any properties on the element, to avoid unnecessary DOM updates."
      - id: "extract_important_constant"
        prompt: "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant."
      - id: "add_comment_paint"
        prompt: "Add a comment block at the beginning of the paint method explaining the different background-rendering scenarios (backgroundMask with coverColor/coverImage vs. default base paint)."
      - id: "refactor_applyPreDrawUpdaters"
        prompt: "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical."
  - path: "corpus/get_page_handler.ts"
    queries:
      - id: "gph_skip_empty_preload"
        prompt: "In handle_page, add an early return that skips setting the 'Link' header when the preload_files array ends up empty."
      - id: "gph_extract_html_constant"
        prompt: "Extract the string 'text/html' into a constant MIME_HTML_TYPE at the top of the file and reuse it when setting Content-Type."
      - id: "gph_comment_serialize_error"
        prompt: "Add a comment above the serialize_error function explaining why it must always return a truthy value."
      - id: "gph_refactor_css_chunks_helper"
        prompt: "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability."
  - path: "corpus/subgraph_rewriter.py"
    queries:
      - id: "sr_early_return_no_gm"
        prompt: "In _replace_attributes, add an early return if the passed GraphModule gm is None to avoid unnecessary work."
      - id: "sr_extract_try_get_attr_helper"
        prompt: "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity."
      - id: "sr_comment_replaced_patterns"
        prompt: "Add a brief comment above the ReplacedPatterns dataclass explaining its role in subgraph rewriting."
      - id: "sr_rename_cloned_attr"
        prompt: "Rename the local variable new_attr to cloned_attr in _replace_attributes to reflect its purpose."
  - path: "corpus/QueryExecution.scala"
    queries:
      - id: "qe_comment_isLazyAnalysis"
        prompt: "Add a comment above the isLazyAnalysis lazy val describing what makes a logical plan 'lazy' in this context."
      - id: "qe_method_lazyAnalyzed"
        prompt: "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry."
      - id: "qe_comment_assertAnalyzed"
        prompt: "Add a scaladoc comment above assertAnalyzed explaining its purpose and when it should be called."
      - id: "qe_early_return_assertSupported"
        prompt: "In assertSupported, add an early return when the UnsupportedOperationCheck flag is disabled to avoid the Checker call."

output_dir: "results/"
