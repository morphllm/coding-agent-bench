[
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 12851.164102554321,
    "time_apply_ms": 0,
    "total_tokens": 8524,
    "timestamp": "2025-08-17T01:39:03.656219",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 15537.511825561523,
    "time_apply_ms": 0,
    "total_tokens": 9867,
    "timestamp": "2025-08-17T01:39:05.936016",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 47511.220932006836,
    "time_apply_ms": 0,
    "total_tokens": 10456,
    "timestamp": "2025-08-17T01:39:38.208007",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 56295.12000083923,
    "time_apply_ms": 0,
    "total_tokens": 10936,
    "timestamp": "2025-08-17T01:39:46.905190",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 65331.60877227783,
    "time_apply_ms": 0,
    "total_tokens": 5918,
    "timestamp": "2025-08-17T01:39:55.815995",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 69770.73907852173,
    "time_apply_ms": 0,
    "total_tokens": 6532,
    "timestamp": "2025-08-17T01:40:00.393502",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 78631.82497024536,
    "time_apply_ms": 0,
    "total_tokens": 5918,
    "timestamp": "2025-08-17T01:40:09.067656",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 65403.1879901886,
    "time_apply_ms": 0,
    "total_tokens": 8472,
    "timestamp": "2025-08-17T01:40:11.002796",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 82713.387966156,
    "time_apply_ms": 0,
    "total_tokens": 6532,
    "timestamp": "2025-08-17T01:40:13.844740",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 88058.38775634766,
    "time_apply_ms": 0,
    "total_tokens": 10200,
    "timestamp": "2025-08-17T01:40:18.793025",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 75891.54720306396,
    "time_apply_ms": 0,
    "total_tokens": 9959,
    "timestamp": "2025-08-17T01:40:24.857499",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 50691.908836364746,
    "time_apply_ms": 0,
    "total_tokens": 9879,
    "timestamp": "2025-08-17T01:40:39.355723",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 34204.26797866821,
    "time_apply_ms": 0,
    "total_tokens": 6481,
    "timestamp": "2025-08-17T01:40:47.173088",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 120001.69706344604,
    "time_apply_ms": 0,
    "total_tokens": 11329,
    "timestamp": "2025-08-17T01:40:50.443022",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 125572.13973999023,
    "time_apply_ms": 0,
    "total_tokens": 5918,
    "timestamp": "2025-08-17T01:40:56.143540",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 76338.26112747192,
    "time_apply_ms": 0,
    "total_tokens": 13215,
    "timestamp": "2025-08-17T01:40:56.391483",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 62494.38214302063,
    "time_apply_ms": 0,
    "total_tokens": 5896,
    "timestamp": "2025-08-17T01:41:00.079231",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 70871.60801887512,
    "time_apply_ms": 0,
    "total_tokens": 6530,
    "timestamp": "2025-08-17T01:41:13.289364",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 143343.46890449524,
    "time_apply_ms": 0,
    "total_tokens": 6532,
    "timestamp": "2025-08-17T01:41:13.864805",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 78029.09207344055,
    "time_apply_ms": 0,
    "total_tokens": 5896,
    "timestamp": "2025-08-17T01:41:28.674742",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 117,
    "time_generate_ms": 55854.05397415161,
    "time_apply_ms": 0,
    "total_tokens": 10976,
    "timestamp": "2025-08-17T01:41:37.405939",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\n/**\\n * DayProps interface defines the properties passed to the Day component.\\n */\\ninterface DayP...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 73709.20324325562,
    "time_apply_ms": 0,
    "total_tokens": 9878,
    "timestamp": "2025-08-17T01:41:40.213757",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"```javascript\\nconst STYLE_IMPORTANT_PRIORITY = \\\"important\\\";\\n\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFrom...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 85392.55809783936,
    "time_apply_ms": 0,
    "total_tokens": 6530,
    "timestamp": "2025-08-17T01:41:41.192629",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 49805.72700500488,
    "time_apply_ms": 0,
    "total_tokens": 10339,
    "timestamp": "2025-08-17T01:41:47.904367",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 70054.54897880554,
    "time_apply_ms": 0,
    "total_tokens": 8818,
    "timestamp": "2025-08-17T01:41:58.814620",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"```typescript\\nconst DAY_CLASS_NAME = \\\"react-datepicker__day\\\";\\n\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 73168.76196861267,
    "time_apply_ms": 0,
    "total_tokens": 9227,
    "timestamp": "2025-08-17T01:42:05.177300",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 117,
    "time_generate_ms": 45101.300954818726,
    "time_apply_ms": 0,
    "total_tokens": 9727,
    "timestamp": "2025-08-17T01:42:24.218614",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\nconst DAY_CLASS_NAME = \\\"react-datepicker__day\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilt...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 70954.73790168762,
    "time_apply_ms": 0,
    "total_tokens": 6535,
    "timestamp": "2025-08-17T01:42:26.177966",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "fix_setStyle_key_collection",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 218994.84014511108,
    "time_apply_ms": 0,
    "total_tokens": 6532,
    "timestamp": "2025-08-17T01:42:29.587953",
    "query_prompt": "In the setStyle function, change the two for-in loops so they add the property name (`key`) to the Set instead of the property value (`elementStyle[key]`). This prevents wrong keys from being processed.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 89788.81096839905,
    "time_apply_ms": 0,
    "total_tokens": 5895,
    "timestamp": "2025-08-17T01:42:32.436613",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\n/**\\n * Props interface for the Day component, defining all configuration options f...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 56086.294174194336,
    "time_apply_ms": 0,
    "total_tokens": 11585,
    "timestamp": "2025-08-17T01:42:45.779742",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 148162.88375854492,
    "time_apply_ms": 0,
    "total_tokens": 14206,
    "timestamp": "2025-08-17T01:42:48.825741",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_extract_isOutsideMonth",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 251086.1577987671,
    "time_apply_ms": 0,
    "total_tokens": 5918,
    "timestamp": "2025-08-17T01:43:01.675998",
    "query_prompt": "Extract a helper isOutsideMonth() that encapsulates the duplicate logic used by isAfterMonth and isBeforeMonth, and refactor getClassNames, renderDayContents, and shouldFocusDay to rely on it for the 'outside-month' checks.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 82101.8898487091,
    "time_apply_ms": 0,
    "total_tokens": 9916,
    "timestamp": "2025-08-17T01:43:04.283865",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 84115.63801765442,
    "time_apply_ms": 0,
    "total_tokens": 6535,
    "timestamp": "2025-08-17T01:43:07.102340",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 131429.36825752258,
    "time_apply_ms": 0,
    "total_tokens": 5896,
    "timestamp": "2025-08-17T01:43:09.543044",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 99947.2827911377,
    "time_apply_ms": 0,
    "total_tokens": 5895,
    "timestamp": "2025-08-17T01:43:11.028798",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\n/**\\n * Props interface for the Day component.\\n * Defines the properties that can b...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 47909.470319747925,
    "time_apply_ms": 0,
    "total_tokens": 9581,
    "timestamp": "2025-08-17T01:43:13.774556",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 74069.99492645264,
    "time_apply_ms": 0,
    "total_tokens": 8507,
    "timestamp": "2025-08-17T01:43:14.679913",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 68941.73812866211,
    "time_apply_ms": 0,
    "total_tokens": 6525,
    "timestamp": "2025-08-17T01:43:36.852412",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 117,
    "time_generate_ms": 62903.887033462524,
    "time_apply_ms": 0,
    "total_tokens": 5886,
    "timestamp": "2025-08-17T01:43:36.869922",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\nconst DAY_CLASS_NAME = 'react-datepicker__day';\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilt...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 53552.77490615845,
    "time_apply_ms": 0,
    "total_tokens": 10957,
    "timestamp": "2025-08-17T01:43:41.434395",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 117,
    "time_generate_ms": 98908.09869766235,
    "time_apply_ms": 0,
    "total_tokens": 10885,
    "timestamp": "2025-08-17T01:43:46.315463",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\n/**\\n * Props for the `Day` component.\\n *\\n * These options control how an individual day cell is ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 166810.9748363495,
    "time_apply_ms": 0,
    "total_tokens": 6530,
    "timestamp": "2025-08-17T01:44:02.873977",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 62042.349100112915,
    "time_apply_ms": 0,
    "total_tokens": 4806,
    "timestamp": "2025-08-17T01:44:17.198053",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 76575.75988769531,
    "time_apply_ms": 0,
    "total_tokens": 10090,
    "timestamp": "2025-08-17T01:44:22.827144",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 77831.81571960449,
    "time_apply_ms": 0,
    "total_tokens": 5886,
    "timestamp": "2025-08-17T01:44:30.406656",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\nconst DAY_CLASS_NAME = \\\"react-datepicker__day\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    D...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 99416.20826721191,
    "time_apply_ms": 0,
    "total_tokens": 10531,
    "timestamp": "2025-08-17T01:44:30.483532",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 83164.80207443237,
    "time_apply_ms": 0,
    "total_tokens": 6525,
    "timestamp": "2025-08-17T01:44:32.269157",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 64307.50584602356,
    "time_apply_ms": 0,
    "total_tokens": 5901,
    "timestamp": "2025-08-17T01:44:42.727697",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 76271.24190330505,
    "time_apply_ms": 0,
    "total_tokens": 6530,
    "timestamp": "2025-08-17T01:44:55.180086",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"Looking at the `_applyPreDrawUpdaters` method, I can see it contains two distinct logical sections:\\n1. Color-style update logic (handling `getColorStyles`)\\n2. Transform-update logic (handling `getTransformValues`)\\n\\nI'll extract these into two helper functions while keeping the behavior identical.\\n\\n```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObser...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 13437.401056289673,
    "time_apply_ms": 0,
    "total_tokens": 7583,
    "timestamp": "2025-08-17T01:44:57.631112",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 60123.228311538696,
    "time_apply_ms": 0,
    "total_tokens": 4788,
    "timestamp": "2025-08-17T01:45:18.719883",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 124389.04571533203,
    "time_apply_ms": 0,
    "total_tokens": 4806,
    "timestamp": "2025-08-17T01:45:20.407243",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 23,
    "time_generate_ms": 98650.25520324707,
    "time_apply_ms": 0,
    "total_tokens": 9406,
    "timestamp": "2025-08-17T01:45:26.583643",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nconst DAY_CLASS_NAME = \\\"react-datepicker__day\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilt...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 66143.55778694153,
    "time_apply_ms": 0,
    "total_tokens": 4806,
    "timestamp": "2025-08-17T01:45:30.414095",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "refactor_classnames",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 160252.90703773499,
    "time_apply_ms": 0,
    "total_tokens": 5896,
    "timestamp": "2025-08-17T01:45:43.726264",
    "query_prompt": "Refactor the getClassNames method to use a more readable approach by extracting the class conditions into a separate object/map before passing to clsx, while maintaining the exact same functionality.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"m...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 77998.67177009583,
    "time_apply_ms": 0,
    "total_tokens": 5901,
    "timestamp": "2025-08-17T01:45:50.133674",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"```jsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 53254.30202484131,
    "time_apply_ms": 0,
    "total_tokens": 7547,
    "timestamp": "2025-08-17T01:45:53.034521",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 87359.58290100098,
    "time_apply_ms": 0,
    "total_tokens": 6529,
    "timestamp": "2025-08-17T01:46:01.769845",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"I'll refactor the `_applyPreDrawUpdaters` method by extracting the color-style update logic and the transform-update logic into two smaller helper functions while keeping the behavior identical.\\n\\nHere's the complete modified file:\\n\\n```javascript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    de...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 139539.2608642578,
    "time_apply_ms": 0,
    "total_tokens": 4806,
    "timestamp": "2025-08-17T01:46:02.413850",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 180583.02402496338,
    "time_apply_ms": 0,
    "total_tokens": 5895,
    "timestamp": "2025-08-17T01:46:12.087675",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\n/**\\n * Props for the Day component that represents a single day in a date picker.\\n */\\nint...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_setStyle_diff_and_return",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 220933.9520931244,
    "time_apply_ms": 0,
    "total_tokens": 6530,
    "timestamp": "2025-08-17T01:46:12.532868",
    "query_prompt": "Refactor setStyle to compute a diff of properties to add/remove, return a boolean indicating whether any changes were applied, and update _repairStyle to skip reinitialization when setStyle returns false.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 59722.42784500122,
    "time_apply_ms": 0,
    "total_tokens": 4770,
    "timestamp": "2025-08-17T01:46:20.012844",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 110268.59903335571,
    "time_apply_ms": 0,
    "total_tokens": 11208,
    "timestamp": "2025-08-17T01:46:22.690496",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 88838.17315101624,
    "time_apply_ms": 0,
    "total_tokens": 8945,
    "timestamp": "2025-08-17T01:46:25.359207",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 65185.46915054321,
    "time_apply_ms": 0,
    "total_tokens": 4788,
    "timestamp": "2025-08-17T01:46:37.224753",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_build_preload_header_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 56410.41302680969,
    "time_apply_ms": 0,
    "total_tokens": 9834,
    "timestamp": "2025-08-17T01:46:48.584103",
    "query_prompt": "Extract a buildPreloadLinkHeader(preload_files, baseUrl, es6_preload) helper that dedupes, filters, and maps files to a single Link header string; call it from handle_page and only set the header when the returned string is non-empty.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 142,
    "time_generate_ms": 81804.64506149292,
    "time_apply_ms": 0,
    "total_tokens": 9083,
    "timestamp": "2025-08-17T01:46:50.470533",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"import { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"\\n    | ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 58687.04104423523,
    "time_apply_ms": 0,
    "total_tokens": 7519,
    "timestamp": "2025-08-17T01:46:53.184281",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 60402.3871421814,
    "time_apply_ms": 0,
    "total_tokens": 4512,
    "timestamp": "2025-08-17T01:47:03.429297",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 185427.3920059204,
    "time_apply_ms": 0,
    "total_tokens": 6535,
    "timestamp": "2025-08-17T01:47:10.079927",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 60457.96203613281,
    "time_apply_ms": 0,
    "total_tokens": 4793,
    "timestamp": "2025-08-17T01:47:21.774198",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 130182.56115913391,
    "time_apply_ms": 0,
    "total_tokens": 4788,
    "timestamp": "2025-08-17T01:47:31.909704",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 43020.5397605896,
    "time_apply_ms": 0,
    "total_tokens": 8469,
    "timestamp": "2025-08-17T01:47:37.412173",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 64991.59216880798,
    "time_apply_ms": 0,
    "total_tokens": 4770,
    "timestamp": "2025-08-17T01:47:43.712365",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 82452.48198509216,
    "time_apply_ms": 0,
    "total_tokens": 8104,
    "timestamp": "2025-08-17T01:47:49.140301",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 65826.99799537659,
    "time_apply_ms": 0,
    "total_tokens": 7543,
    "timestamp": "2025-08-17T01:48:01.479281",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 60672.178983688354,
    "time_apply_ms": 0,
    "total_tokens": 4502,
    "timestamp": "2025-08-17T01:48:06.107501",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 92,
    "time_generate_ms": 116570.04308700562,
    "time_apply_ms": 0,
    "total_tokens": 10978,
    "timestamp": "2025-08-17T01:48:21.105457",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 42552.10018157959,
    "time_apply_ms": 0,
    "total_tokens": 8586,
    "timestamp": "2025-08-17T01:48:21.445098",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_set_html_content_type_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 138089.07985687256,
    "time_apply_ms": 0,
    "total_tokens": 4788,
    "timestamp": "2025-08-17T01:48:21.764697",
    "query_prompt": "Introduce a MIME_HTML_TYPE constant and a setHtmlContentType(res) helper, and use it in both handle_page and bail so all HTML responses set a consistent Content-Type.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 60783.560037612915,
    "time_apply_ms": 0,
    "total_tokens": 4790,
    "timestamp": "2025-08-17T01:48:24.023580",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 131251.27911567688,
    "time_apply_ms": 0,
    "total_tokens": 5886,
    "timestamp": "2025-08-17T01:48:25.084885",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\nconst DAY_CLASS_NAME = \\\"react-datepicker__day\\\";\\n\\ninterface DayProps\\n  extends Pick...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 99655.2357673645,
    "time_apply_ms": 0,
    "total_tokens": 4512,
    "timestamp": "2025-08-17T01:48:31.495545",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 65573.27604293823,
    "time_apply_ms": 0,
    "total_tokens": 4793,
    "timestamp": "2025-08-17T01:48:50.755570",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 56551.54728889465,
    "time_apply_ms": 0,
    "total_tokens": 7541,
    "timestamp": "2025-08-17T01:48:59.736116",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"```javascript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 61607.446908950806,
    "time_apply_ms": 0,
    "total_tokens": 4534,
    "timestamp": "2025-08-17T01:49:09.125988",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 12533.987760543823,
    "time_apply_ms": 0,
    "total_tokens": 7242,
    "timestamp": "2025-08-17T01:49:14.477565",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_tsdoc_all_methods",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 210516.97206497192,
    "time_apply_ms": 0,
    "total_tokens": 5895,
    "timestamp": "2025-08-17T01:49:16.301966",
    "query_prompt": "Add TSDoc comments describing purpose, inputs, and outputs for every public method in the Day class (including getters like isDisabled/isSelected) and the DayProps interface.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\n/**\\n * Properties for the Day component.\\n * Defines the configuration and behavior...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 107184.46111679077,
    "time_apply_ms": 0,
    "total_tokens": 4770,
    "timestamp": "2025-08-17T01:49:20.598299",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 95107.61904716492,
    "time_apply_ms": 0,
    "total_tokens": 8523,
    "timestamp": "2025-08-17T01:49:25.823258",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 63119.60864067078,
    "time_apply_ms": 0,
    "total_tokens": 4512,
    "timestamp": "2025-08-17T01:49:28.470307",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_important_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 206827.21304893494,
    "time_apply_ms": 0,
    "total_tokens": 6535,
    "timestamp": "2025-08-17T01:49:41.196902",
    "query_prompt": "Extract the string literal 'important' used in element.style.setProperty calls into a constant named STYLE_IMPORTANT_PRIORITY at the top of the file, and replace the hard-coded occurrences with this constant.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 78987.9720211029,
    "time_apply_ms": 0,
    "total_tokens": 13511,
    "timestamp": "2025-08-17T01:49:42.445526",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 64904.749155044556,
    "time_apply_ms": 0,
    "total_tokens": 4790,
    "timestamp": "2025-08-17T01:49:57.294523",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 46018.62812042236,
    "time_apply_ms": 0,
    "total_tokens": 7166,
    "timestamp": "2025-08-17T01:50:01.707936",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 59060.85181236267,
    "time_apply_ms": 0,
    "total_tokens": 4516,
    "timestamp": "2025-08-17T01:50:09.582114",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 98275.24304389954,
    "time_apply_ms": 0,
    "total_tokens": 4502,
    "timestamp": "2025-08-17T01:50:11.314227",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 181437.19792366028,
    "time_apply_ms": 0,
    "total_tokens": 6525,
    "timestamp": "2025-08-17T01:50:13.251543",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 62903.658866882324,
    "time_apply_ms": 0,
    "total_tokens": 4502,
    "timestamp": "2025-08-17T01:50:32.679359",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 51845.72410583496,
    "time_apply_ms": 0,
    "total_tokens": 10037,
    "timestamp": "2025-08-17T01:50:36.544629",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 135861.48405075073,
    "time_apply_ms": 0,
    "total_tokens": 5901,
    "timestamp": "2025-08-17T01:50:42.478101",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 50750.53906440735,
    "time_apply_ms": 0,
    "total_tokens": 6682,
    "timestamp": "2025-08-17T01:50:49.343768",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_refactor_css_chunks_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 148226.7119884491,
    "time_apply_ms": 0,
    "total_tokens": 4770,
    "timestamp": "2025-08-17T01:50:51.500078",
    "query_prompt": "Refactor the css_chunks Set logic into a small helper function called getCssChunks to improve readability.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 87634.1290473938,
    "time_apply_ms": 0,
    "total_tokens": 8246,
    "timestamp": "2025-08-17T01:50:54.766353",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 106975.13508796692,
    "time_apply_ms": 0,
    "total_tokens": 4793,
    "timestamp": "2025-08-17T01:51:09.116757",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 71541.15104675293,
    "time_apply_ms": 0,
    "total_tokens": 7274,
    "timestamp": "2025-08-17T01:51:14.712921",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 83,
    "time_generate_ms": 68159.6827507019,
    "time_apply_ms": 0,
    "total_tokens": 4525,
    "timestamp": "2025-08-17T01:51:19.210588",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, Dict, List, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filter...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 44432.01398849487,
    "time_apply_ms": 0,
    "total_tokens": 8636,
    "timestamp": "2025-08-17T01:51:22.327777",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_gm_optional_signature_and_guard",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 194107.31410980225,
    "time_apply_ms": 0,
    "total_tokens": 4512,
    "timestamp": "2025-08-17T01:51:36.674548",
    "query_prompt": "Change _replace_attributes to accept Optional[GraphModule] and raise a ValueError immediately when gm is None; update its sole call site to handle this behavior explicitly.",
    "response_data": "{\"full_file_output\": \"Here's the complete modified file with the requested changes:\\n\\n```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Ma...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 62843.122243881226,
    "time_apply_ms": 0,
    "total_tokens": 4534,
    "timestamp": "2025-08-17T01:51:36.793658",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 67,
    "time_generate_ms": 42515.75779914856,
    "time_apply_ms": 0,
    "total_tokens": 8842,
    "timestamp": "2025-08-17T01:52:06.261212",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\ndef try_get_attr(gm: torch.nn.Module, target: str) -> Optional[Any]:\\n    module_path, _, attr_name = target.rpartition(\\\".\\\")\\n    try:\\n        mod: torch.nn.Module = gm.get_submodule(module_p...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 113592.01002120972,
    "time_apply_ms": 0,
    "total_tokens": 4534,
    "timestamp": "2025-08-17T01:52:06.329836",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"Looking at the code, I need to:\\n1. Create a helper function `get_graph_from_input(value)` that returns a Graph given a Callable, Graph, or GraphModule\\n2. Replace the branching logic in both `replace_pattern` and `_replace_pattern` that builds pattern_graph and replacement graphs to use this helper\\n\\nHere's the complete modified file:\\n\\n```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 50680.458068847656,
    "time_apply_ms": 0,
    "total_tokens": 7177,
    "timestamp": "2025-08-17T01:52:06.821456",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 77630.19490242004,
    "time_apply_ms": 0,
    "total_tokens": 7597,
    "timestamp": "2025-08-17T01:52:08.498073",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "extract_constant",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 179208.59098434448,
    "time_apply_ms": 0,
    "total_tokens": 5886,
    "timestamp": "2025-08-17T01:52:17.320101",
    "query_prompt": "Extract the string 'react-datepicker__day' into a constant at the top of the file called DAY_CLASS_NAME",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\nconst DAY_CLASS_NAME = \\\"react-datepicker__day\\\";\\n\\ninterface DayProps\\n  extends Pick...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 62102.86617279053,
    "time_apply_ms": 0,
    "total_tokens": 4516,
    "timestamp": "2025-08-17T01:52:40.433530",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 150342.21267700195,
    "time_apply_ms": 0,
    "total_tokens": 6527,
    "timestamp": "2025-08-17T01:52:45.546361",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 128292.17195510864,
    "time_apply_ms": 0,
    "total_tokens": 8222,
    "timestamp": "2025-08-17T01:52:52.720147",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 103565.48285484314,
    "time_apply_ms": 0,
    "total_tokens": 4790,
    "timestamp": "2025-08-17T01:52:54.284097",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 119,
    "time_generate_ms": 126922.29890823364,
    "time_apply_ms": 0,
    "total_tokens": 10205,
    "timestamp": "2025-08-17T01:53:03.177185",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"import { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { PageContext, Prel...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 56169.38304901123,
    "time_apply_ms": 0,
    "total_tokens": 9117,
    "timestamp": "2025-08-17T01:53:04.244728",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 63275.74920654297,
    "time_apply_ms": 0,
    "total_tokens": 7191,
    "timestamp": "2025-08-17T01:53:11.702423",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, Dict, List, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_w...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "extract_paint_helpers",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 218110.91208457947,
    "time_apply_ms": 0,
    "total_tokens": 6525,
    "timestamp": "2025-08-17T01:53:21.169573",
    "query_prompt": "Extract the branches inside paint() into two helpers: _applyBackgroundMaskCover() and _applyDefaultBasePaint(), then call them from paint() without changing behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 77501.70922279358,
    "time_apply_ms": 0,
    "total_tokens": 4516,
    "timestamp": "2025-08-17T01:53:25.235838",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"Looking at the code, I need to find the `_replace_attributes` function and fix the RuntimeError construction. The issue is on lines 87-94 where the RuntimeError is being constructed with multiple string arguments instead of a single formatted string.\\n\\nHere's the complete modified file:\\n\\n```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_safe_serialize_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 153421.0000038147,
    "time_apply_ms": 0,
    "total_tokens": 4793,
    "timestamp": "2025-08-17T01:53:26.389095",
    "query_prompt": "Extract a helper function safe_serialize(data, onError?) that wraps try_serialize and guarantees a non-null string, then use it for both preloaded data serialization and session serialization in handle_page.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 138663.0940437317,
    "time_apply_ms": 0,
    "total_tokens": 8222,
    "timestamp": "2025-08-17T01:53:39.991815",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 34836.660861968994,
    "time_apply_ms": 0,
    "total_tokens": 7892,
    "timestamp": "2025-08-17T01:53:40.561739",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 63216.6690826416,
    "time_apply_ms": 0,
    "total_tokens": 4525,
    "timestamp": "2025-08-17T01:53:44.950809",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, Dict, List, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_w...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_try_get_attr_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 133330.3780555725,
    "time_apply_ms": 0,
    "total_tokens": 4502,
    "timestamp": "2025-08-17T01:53:51.309969",
    "query_prompt": "Extract the inner function try_get_attr from _replace_attributes into a separate top-level helper for clarity.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 122099.4188785553,
    "time_apply_ms": 0,
    "total_tokens": 9545,
    "timestamp": "2025-08-17T01:54:11.862887",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 83,
    "time_generate_ms": 52003.85928153992,
    "time_apply_ms": 0,
    "total_tokens": 9508,
    "timestamp": "2025-08-17T01:54:34.107118",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union, Dict, List\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filter...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 61293.328285217285,
    "time_apply_ms": 0,
    "total_tokens": 13078,
    "timestamp": "2025-08-17T01:54:48.421410",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 108731.60815238953,
    "time_apply_ms": 0,
    "total_tokens": 12299,
    "timestamp": "2025-08-17T01:54:54.047357",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 130149.59597587585,
    "time_apply_ms": 0,
    "total_tokens": 8222,
    "timestamp": "2025-08-17T01:55:06.576646",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 138345.04199028015,
    "time_apply_ms": 0,
    "total_tokens": 8234,
    "timestamp": "2025-08-17T01:55:13.360216",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/day.tsx",
    "query_id": "day_refactor_overlay_renderer",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 174548.36893081665,
    "time_apply_ms": 0,
    "total_tokens": 5901,
    "timestamp": "2025-08-17T01:55:14.093198",
    "query_prompt": "Extract a renderOverlay() helper that returns the overlay <span> when getTitle() is non-empty and null otherwise, add aria-live=polite when present, and update render() to call it.",
    "response_data": "{\"full_file_output\": \"```tsx\\nimport { clsx } from \\\"clsx\\\";\\nimport React, { Component, createRef } from \\\"react\\\";\\n\\nimport {\\n  getDay,\\n  getMonth,\\n  getDate,\\n  newDate,\\n  isSameDay,\\n  isDayDisabled,\\n  isDayExcluded,\\n  isDayInRange,\\n  isEqual,\\n  isBefore,\\n  isAfter,\\n  getDayOfWeekCode,\\n  getStartOfWeek,\\n  formatDate,\\n  type DateFilterOptions,\\n  type DateNumberType,\\n  type Locale,\\n  type HolidaysMap,\\n  KeyType,\\n} from \\\"./date_utils\\\";\\n\\ninterface DayProps\\n  extends Pick<\\n    DateFilterOptions,\\n    | \\\"minDate\\\"\\n    | \\\"maxDate\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 115382.72786140442,
    "time_apply_ms": 0,
    "total_tokens": 4525,
    "timestamp": "2025-08-17T01:55:22.049543",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, Dict, List, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_w...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 108,
    "time_generate_ms": 84479.78711128235,
    "time_apply_ms": 0,
    "total_tokens": 7383,
    "timestamp": "2025-08-17T01:55:37.665698",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\",\\n    \\\"Rep...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 144537.32776641846,
    "time_apply_ms": 0,
    "total_tokens": 12884,
    "timestamp": "2025-08-17T01:55:38.337013",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/get_page_handler.ts",
    "query_id": "gph_extract_fetch_credentials_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 135301.0950088501,
    "time_apply_ms": 0,
    "total_tokens": 4790,
    "timestamp": "2025-08-17T01:55:43.365608",
    "query_prompt": "Extract the credential and cookie-merging logic inside preload_context.fetch into a helper attachCredentials(url, opts, req, res) and call it from fetch to reduce nesting while preserving behavior.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { writable } from 'svelte/store';\\nimport fs from 'fs';\\nimport path from 'path';\\nimport { parse } from 'cookie';\\nimport devalue from 'devalue';\\nimport fetch from 'node-fetch';\\nimport URL from 'url';\\nimport { sourcemap_stacktrace } from './sourcemap_stacktrace';\\nimport {\\n    Manifest,\\n    ManifestPage,\\n    SapperRequest,\\n    SapperResponse,\\n    build_dir,\\n    dev,\\n    src_dir\\n} from '@sapper/internal/manifest-server';\\nimport App from '@sapper/internal/App.svelte';\\nimport { Pag...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 21994.115829467773,
    "time_apply_ms": 0,
    "total_tokens": 7285,
    "timestamp": "2025-08-17T01:56:02.316422",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"No code modifications required.\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 75531.15701675415,
    "time_apply_ms": 0,
    "total_tokens": 13268,
    "timestamp": "2025-08-17T01:56:06.066795",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 97781.33392333984,
    "time_apply_ms": 0,
    "total_tokens": 7898,
    "timestamp": "2025-08-17T01:56:14.054821",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_extract_graph_from_input_helper",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 141423.32100868225,
    "time_apply_ms": 0,
    "total_tokens": 4534,
    "timestamp": "2025-08-17T01:56:14.217713",
    "query_prompt": "Introduce a helper get_graph_from_input(value) that returns a Graph given a Callable, Graph, or GraphModule, and replace the branching that builds pattern_graph and replacement graphs in both replace_pattern and _replace_pattern to use it.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 92379.64797019958,
    "time_apply_ms": 0,
    "total_tokens": 12299,
    "timestamp": "2025-08-17T01:56:28.565696",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_method_lazyAnalyzed",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 222466.82000160217,
    "time_apply_ms": 0,
    "total_tokens": 8222,
    "timestamp": "2025-08-17T01:56:30.177761",
    "query_prompt": "Move the body of the lazyAnalyzed LazyTry block into a private method computeAnalyzedPlan and call it from LazyTry.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 189711.5240097046,
    "time_apply_ms": 0,
    "total_tokens": 8234,
    "timestamp": "2025-08-17T01:56:51.752583",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/Canvas.ts",
    "query_id": "refactor_applyPreDrawUpdaters",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 214075.8819580078,
    "time_apply_ms": 0,
    "total_tokens": 6527,
    "timestamp": "2025-08-17T01:56:57.198621",
    "query_prompt": "Refactor the _applyPreDrawUpdaters method by extracting the color-style update logic and the transform-update logic into two smaller helper functions to improve readability while keeping behavior identical.",
    "response_data": "{\"full_file_output\": \"```typescript\\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \\\"../Utils/CanvasUtils.js\\\";\\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \\\"../Utils/Utils.js\\\";\\nimport {\\n    defaultOpacity,\\n    defaultTransformValue,\\n    generatedAttribute,\\n    inverseFactorNumerator,\\n    minimumLength,\\n    minimumSize,\\n    zIndexFactorOffset,\\n} from \\\"./Utils/Constants.js\\\";\\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeCol...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 83,
    "time_generate_ms": 78612.33282089233,
    "time_apply_ms": 0,
    "total_tokens": 8037,
    "timestamp": "2025-08-17T01:56:58.471250",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"import copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union, Dict, List, Set\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_f...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 131424.71885681152,
    "time_apply_ms": 0,
    "total_tokens": 8234,
    "timestamp": "2025-08-17T01:57:20.164208",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 134175.27413368225,
    "time_apply_ms": 0,
    "total_tokens": 8225,
    "timestamp": "2025-08-17T01:57:29.757537",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 109171.21505737305,
    "time_apply_ms": 0,
    "total_tokens": 7900,
    "timestamp": "2025-08-17T01:57:34.545778",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"I'll modify the file to make the bird red and have wings.\\n\\n```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 87310.27603149414,
    "time_apply_ms": 0,
    "total_tokens": 12631,
    "timestamp": "2025-08-17T01:57:35.407763",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 95176.91802978516,
    "time_apply_ms": 0,
    "total_tokens": 12654,
    "timestamp": "2025-08-17T01:57:39.599312",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 105855.27205467224,
    "time_apply_ms": 0,
    "total_tokens": 7904,
    "timestamp": "2025-08-17T01:58:02.235950",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 101330.7900428772,
    "time_apply_ms": 0,
    "total_tokens": 12296,
    "timestamp": "2025-08-17T01:58:12.199173",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 100632.92217254639,
    "time_apply_ms": 0,
    "total_tokens": 12931,
    "timestamp": "2025-08-17T01:58:39.981422",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n    ...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 220362.8740310669,
    "time_apply_ms": 0,
    "total_tokens": 7898,
    "timestamp": "2025-08-17T01:58:56.638699",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 141207.64684677124,
    "time_apply_ms": 0,
    "total_tokens": 13755,
    "timestamp": "2025-08-17T01:59:21.813894",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n    ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 110207.63063430786,
    "time_apply_ms": 0,
    "total_tokens": 7904,
    "timestamp": "2025-08-17T01:59:26.726261",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 48544.91996765137,
    "time_apply_ms": 0,
    "total_tokens": 9557,
    "timestamp": "2025-08-17T01:59:30.739344",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n    ...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 131458.52184295654,
    "time_apply_ms": 0,
    "total_tokens": 8225,
    "timestamp": "2025-08-17T01:59:33.909976",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 80353.84273529053,
    "time_apply_ms": 0,
    "total_tokens": 12417,
    "timestamp": "2025-08-17T01:59:34.720345",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 124501.41906738281,
    "time_apply_ms": 0,
    "total_tokens": 8260,
    "timestamp": "2025-08-17T01:59:36.368948",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 98461.58409118652,
    "time_apply_ms": 0,
    "total_tokens": 7907,
    "timestamp": "2025-08-17T01:59:42.802692",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 128299.76296424866,
    "time_apply_ms": 0,
    "total_tokens": 17853,
    "timestamp": "2025-08-17T01:59:45.797165",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_fix_runtimeerror_message",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 215746.15812301636,
    "time_apply_ms": 0,
    "total_tokens": 4516,
    "timestamp": "2025-08-17T01:59:51.233339",
    "query_prompt": "In _replace_attributes, build the RuntimeError as a single formatted string (e.g., with an f-string) instead of passing multiple string arguments so the message renders correctly.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_with_filters\\\"...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 206627.38728523254,
    "time_apply_ms": 0,
    "total_tokens": 8225,
    "timestamp": "2025-08-17T02:00:20.453801",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 193370.8779811859,
    "time_apply_ms": 0,
    "total_tokens": 17169,
    "timestamp": "2025-08-17T02:00:55.484158",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"[The complete file content with the requested changes applied is presented below.]\\n\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the Licens...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 83764.53399658203,
    "time_apply_ms": 0,
    "total_tokens": 12633,
    "timestamp": "2025-08-17T02:00:56.686964",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n    ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 68934.20195579529,
    "time_apply_ms": 0,
    "total_tokens": 13807,
    "timestamp": "2025-08-17T02:00:56.883140",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 82817.18111038208,
    "time_apply_ms": 0,
    "total_tokens": 12323,
    "timestamp": "2025-08-17T02:00:59.594829",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 104713.13190460205,
    "time_apply_ms": 0,
    "total_tokens": 7907,
    "timestamp": "2025-08-17T02:01:13.702308",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 104562.43205070496,
    "time_apply_ms": 0,
    "total_tokens": 7903,
    "timestamp": "2025-08-17T02:01:29.835509",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 130081.61997795105,
    "time_apply_ms": 0,
    "total_tokens": 15177,
    "timestamp": "2025-08-17T02:01:33.904030",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 132533.527135849,
    "time_apply_ms": 0,
    "total_tokens": 8260,
    "timestamp": "2025-08-17T02:01:48.658337",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 130899.84583854675,
    "time_apply_ms": 0,
    "total_tokens": 8238,
    "timestamp": "2025-08-17T02:01:49.394881",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 80797.03688621521,
    "time_apply_ms": 0,
    "total_tokens": 12959,
    "timestamp": "2025-08-17T02:02:19.523299",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n    ...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 78607.59401321411,
    "time_apply_ms": 0,
    "total_tokens": 6033,
    "timestamp": "2025-08-17T02:02:19.925375",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 85734.63988304138,
    "time_apply_ms": 0,
    "total_tokens": 14887,
    "timestamp": "2025-08-17T02:02:24.549416",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "design_bird",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 434264.2698287964,
    "time_apply_ms": 0,
    "total_tokens": 7898,
    "timestamp": "2025-08-17T02:02:38.327522",
    "query_prompt": "make the bird red and have wings",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 223276.98373794556,
    "time_apply_ms": 0,
    "total_tokens": 7904,
    "timestamp": "2025-08-17T02:02:42.169576",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 29173.48599433899,
    "time_apply_ms": 0,
    "total_tokens": 8535,
    "timestamp": "2025-08-17T02:02:50.935447",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Cyberpunk Flappy Bird</title>\\n  <style>\\n    /* ------------------------------\\n       Cyberpunk-themed styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0f0f1e;\\n      --panel: #1a1a2e;\\n      --text: #00ffcc;\\n      --muted: #00a3a3;\\n      --accent: #ff007f;\\n      --accent-2: #00ffff;\\n      --danger: #ff0033;\\n      --gol...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 108604.23493385315,
    "time_apply_ms": 0,
    "total_tokens": 7903,
    "timestamp": "2025-08-17T02:03:04.630622",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 62,
    "time_generate_ms": 105401.42297744751,
    "time_apply_ms": 0,
    "total_tokens": 7899,
    "timestamp": "2025-08-17T02:03:18.110307",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Neural Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0a0a0a;\\n      --panel: #1a1a2e;\\n      --text: #00ffff;\\n      --muted: #ff00ff;\\n      --accent: #00ff41;\\n      --accent-2: #ff0080;\\n      --danger: #ff0040;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 106,
    "time_generate_ms": 145967.4141407013,
    "time_apply_ms": 0,
    "total_tokens": 13060,
    "timestamp": "2025-08-17T02:03:23.563924",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by ap...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 128,
    "time_generate_ms": 70822.49283790588,
    "time_apply_ms": 0,
    "total_tokens": 6027,
    "timestamp": "2025-08-17T02:03:32.543497",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color between orange and cyan\\n//   Esc: quit\\n\\n...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 129335.28399467468,
    "time_apply_ms": 0,
    "total_tokens": 13428,
    "timestamp": "2025-08-17T02:03:45.288770",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 83749.37891960144,
    "time_apply_ms": 0,
    "total_tokens": 15761,
    "timestamp": "2025-08-17T02:03:50.534696",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 214964.28680419922,
    "time_apply_ms": 0,
    "total_tokens": 8260,
    "timestamp": "2025-08-17T02:03:57.799455",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 131191.26081466675,
    "time_apply_ms": 0,
    "total_tokens": 8238,
    "timestamp": "2025-08-17T02:04:02.198325",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"```java\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requir...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/subgraph_rewriter.py",
    "query_id": "sr_typing_backports",
    "method": "full_file_generation",
    "redundant_tokens": 1,
    "time_generate_ms": 262574.71895217896,
    "time_apply_ms": 0,
    "total_tokens": 4525,
    "timestamp": "2025-08-17T02:04:15.313533",
    "query_prompt": "Replace PEP 585 built-in generics (e.g., dict[Node, Node], list[Node]) with typing.Dict and typing.List throughout this file for Python 3.8 compatibility.",
    "response_data": "{\"full_file_output\": \"```python\\nimport copy\\nfrom dataclasses import dataclass\\nfrom typing import Any, Callable, Dict, List, NamedTuple, Optional, TYPE_CHECKING, Union\\n\\nimport torch\\n\\nfrom ._compatibility import compatibility\\nfrom ._symbolic_trace import symbolic_trace\\nfrom .graph import Graph\\nfrom .graph_module import GraphModule\\nfrom .node import Node\\n\\n\\nif TYPE_CHECKING:\\n    from .passes.utils.matcher_with_name_node_map_utils import InternalMatch\\n\\n__all__ = [\\n    \\\"Match\\\",\\n    \\\"replace_pattern\\\",\\n    \\\"replace_pattern_w...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 63601.72486305237,
    "time_apply_ms": 0,
    "total_tokens": 9743,
    "timestamp": "2025-08-17T02:04:28.875035",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_refactor_explainString_delegate",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 477418.1230068207,
    "time_apply_ms": 0,
    "total_tokens": 8234,
    "timestamp": "2025-08-17T02:04:29.669926",
    "query_prompt": "Refactor explainString so it delegates to a new private explainWithMode(mode: ExplainMode, maxFields: Int, append: String => Unit) method to reduce duplication; update callers accordingly.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 84252.12502479553,
    "time_apply_ms": 0,
    "total_tokens": 6033,
    "timestamp": "2025-08-17T02:04:44.223358",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 74067.70396232605,
    "time_apply_ms": 0,
    "total_tokens": 6029,
    "timestamp": "2025-08-17T02:04:48.303850",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 69365.78679084778,
    "time_apply_ms": 0,
    "total_tokens": 14706,
    "timestamp": "2025-08-17T02:05:01.935184",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 73,
    "time_generate_ms": 114897.3331451416,
    "time_apply_ms": 0,
    "total_tokens": 7899,
    "timestamp": "2025-08-17T02:05:02.372226",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Neon Runner \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #080810;\\n      --panel: #101220;\\n      --text: #e9edf1;\\n      --muted: #7a8da6;\\n      --accent: #00f0ff;\\n      --accent-2: #ff00aa;\\n      --danger: #ff2266;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 52965.57378768921,
    "time_apply_ms": 0,
    "total_tokens": 11153,
    "timestamp": "2025-08-17T02:05:09.912146",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 210415.06004333496,
    "time_apply_ms": 0,
    "total_tokens": 6033,
    "timestamp": "2025-08-17T02:05:21.484414",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 64448.25530052185,
    "time_apply_ms": 0,
    "total_tokens": 9618,
    "timestamp": "2025-08-17T02:05:35.010030",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color between orange and cyan\\n//   Esc:...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 96340.82794189453,
    "time_apply_ms": 0,
    "total_tokens": 10754,
    "timestamp": "2025-08-17T02:05:40.058592",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 123953.64618301392,
    "time_apply_ms": 0,
    "total_tokens": 13754,
    "timestamp": "2025-08-17T02:05:51.493689",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 66080.3279876709,
    "time_apply_ms": 0,
    "total_tokens": 6038,
    "timestamp": "2025-08-17T02:05:56.674959",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmat...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 79907.58562088013,
    "time_apply_ms": 0,
    "total_tokens": 6027,
    "timestamp": "2025-08-17T02:06:05.895093",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color between orange and cyan\\n//   Esc:...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 128,
    "time_generate_ms": 60078.70602607727,
    "time_apply_ms": 0,
    "total_tokens": 10901,
    "timestamp": "2025-08-17T02:06:11.831418",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color between orange and cyan\\n//   Esc: quit\\n\\n...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 79747.01690673828,
    "time_apply_ms": 0,
    "total_tokens": 14428,
    "timestamp": "2025-08-17T02:06:24.028300",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 67460.89291572571,
    "time_apply_ms": 0,
    "total_tokens": 9726,
    "timestamp": "2025-08-17T02:06:44.216253",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 57594.28596496582,
    "time_apply_ms": 0,
    "total_tokens": 10833,
    "timestamp": "2025-08-17T02:07:10.992329",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 128,
    "time_generate_ms": 90715.50679206848,
    "time_apply_ms": 0,
    "total_tokens": 10001,
    "timestamp": "2025-08-17T02:07:12.635886",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color\\n//   Esc: quit\\n\\n#include <SFML/Graphics....\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 74476.0799407959,
    "time_apply_ms": 0,
    "total_tokens": 6042,
    "timestamp": "2025-08-17T02:07:13.161051",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 80964.28394317627,
    "time_apply_ms": 0,
    "total_tokens": 6029,
    "timestamp": "2025-08-17T02:07:28.570804",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 292951.51686668396,
    "time_apply_ms": 0,
    "total_tokens": 7907,
    "timestamp": "2025-08-17T02:07:37.928599",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 62,
    "time_generate_ms": 79779.305934906,
    "time_apply_ms": 0,
    "total_tokens": 14954,
    "timestamp": "2025-08-17T02:07:46.115140",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Cyberpunk Edition</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0d0d14;\\n      --panel: #1a1a2e;\\n      --text: #f8f8f2;\\n      --muted: #6272a4;\\n      --accent: #8be9fd;\\n      --accent-2: #ff79c6;\\n      --danger: #ff5555;\\n      ...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 60167.53697395325,
    "time_apply_ms": 0,
    "total_tokens": 9501,
    "timestamp": "2025-08-17T02:07:46.315451",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmat...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "visualizer_background_color",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 301717.76485443115,
    "time_apply_ms": 0,
    "total_tokens": 6033,
    "timestamp": "2025-08-17T02:07:54.364458",
    "query_prompt": "Make the background color a gradient, blue on the left, green on the right and a smooth transition",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 123753.36289405823,
    "time_apply_ms": 0,
    "total_tokens": 13753,
    "timestamp": "2025-08-17T02:07:58.215950",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Neon Flappy \\u2013 Cyberpunk Edition</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       Cyberpunk palette \\ud83c\\udf9b\\n       ------------------------------ */\\n    :root {\\n      --bg: #07070c;\\n      --panel: #101020;\\n      --text: #e0f7ff;\\n      --muted: #8b9bb5;\\n      --accent: #ff00ff;\\n      --accent-2: #00e4...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 135,
    "time_generate_ms": 55254.40692901611,
    "time_apply_ms": 0,
    "total_tokens": 10832,
    "timestamp": "2025-08-17T02:08:08.255753",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#inc...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 175084.42902565002,
    "time_apply_ms": 0,
    "total_tokens": 6027,
    "timestamp": "2025-08-17T02:08:18.478045",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color between orange and cyan\\n//   Esc:...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 266548.88916015625,
    "time_apply_ms": 0,
    "total_tokens": 8238,
    "timestamp": "2025-08-17T02:08:26.564532",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 77728.6958694458,
    "time_apply_ms": 0,
    "total_tokens": 6038,
    "timestamp": "2025-08-17T02:08:48.344265",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmat...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-4o",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 69724.16925430298,
    "time_apply_ms": 0,
    "total_tokens": 10346,
    "timestamp": "2025-08-17T02:08:57.990941",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 113712.29434013367,
    "time_apply_ms": 0,
    "total_tokens": 10559,
    "timestamp": "2025-08-17T02:09:08.157433",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o4-mini",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 144,
    "time_generate_ms": 76240.15808105469,
    "time_apply_ms": 0,
    "total_tokens": 11497,
    "timestamp": "2025-08-17T02:09:26.215187",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#incl...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "full_screen",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 458343.5959815979,
    "time_apply_ms": 0,
    "total_tokens": 7904,
    "timestamp": "2025-08-17T02:10:19.002825",
    "query_prompt": "detect desktop or mobile. if desktop, make the canvas full screen",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-sonnet-3.7",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 88893.03135871887,
    "time_apply_ms": 0,
    "total_tokens": 6042,
    "timestamp": "2025-08-17T02:10:19.458038",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 135,
    "time_generate_ms": 114451.14779472351,
    "time_apply_ms": 0,
    "total_tokens": 10142,
    "timestamp": "2025-08-17T02:11:04.635578",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath>\\n#inc...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 166806.9109916687,
    "time_apply_ms": 0,
    "total_tokens": 6029,
    "timestamp": "2025-08-17T02:11:07.751383",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 212771.62313461304,
    "time_apply_ms": 0,
    "total_tokens": 7903,
    "timestamp": "2025-08-17T02:11:12.921002",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_assertSupported_refactor_and_flag_shortcircuit",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 452849.28917884827,
    "time_apply_ms": 0,
    "total_tokens": 8225,
    "timestamp": "2025-08-17T02:12:04.624328",
    "query_prompt": "Refactor assertSupported to compute a local flag, short-circuit when the unsupported operation check is disabled, and otherwise call the checker; keep behavior identical for enabled cases.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "gpt-o3",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 134,
    "time_generate_ms": 116990.80395698547,
    "time_apply_ms": 0,
    "total_tokens": 11149,
    "timestamp": "2025-08-17T02:13:03.557457",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n// Command-line:\\n//   --rossler    Run the R\\u00f6ssler a...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_colours",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 323953.115940094,
    "time_apply_ms": 0,
    "total_tokens": 6027,
    "timestamp": "2025-08-17T02:13:19.989548",
    "query_prompt": "Add keyboard control so pressing G toggles point color between orange and cyan",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   G: toggle point color between orange and cyan\\n//   Esc:...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 160295.97282409668,
    "time_apply_ms": 0,
    "total_tokens": 6038,
    "timestamp": "2025-08-17T02:13:49.818335",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmat...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 62,
    "time_generate_ms": 249451.1308670044,
    "time_apply_ms": 0,
    "total_tokens": 7899,
    "timestamp": "2025-08-17T02:15:25.266529",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Cyber Bird 2077 \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0a0a0f;\\n      --panel: #1a0b2e;\\n      --text: #00ffff;\\n      --muted: #ff00ff;\\n      --accent: #00ff00;\\n      --accent-2: #ff00aa;\\n      --danger: #ff0044;\\n      --...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4.1",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 189831.45689964294,
    "time_apply_ms": 0,
    "total_tokens": 6042,
    "timestamp": "2025-08-17T02:17:01.714269",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "random_emoji",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 476188.6296272278,
    "time_apply_ms": 0,
    "total_tokens": 7907,
    "timestamp": "2025-08-17T02:18:17.366936",
    "query_prompt": "Turn the bird into a random emoji every time I go through a set of pipes",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "fps_counter",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 302386.07692718506,
    "time_apply_ms": 0,
    "total_tokens": 6029,
    "timestamp": "2025-08-17T02:18:24.034910",
    "query_prompt": "Add an FPS counter to the HUD text, updated once per frame.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": false,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_extract_append_section_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 383795.75085639954,
    "time_apply_ms": 0,
    "total_tokens": 8260,
    "timestamp": "2025-08-17T02:18:30.514468",
    "query_prompt": "Extract a private helper method appendPlanSection(title: String, plan: QueryPlan[_], append: String => Unit, maxFields: Int, verbose: Boolean, addSuffix: Boolean) and use it to replace repeated QueryPlan.append blocks in simpleString, writePlans, and stringWithStats without changing behavior.",
    "response_data": "{\"full_file_output\": \"Looking at the code, I need to identify the repeated QueryPlan.append blocks and extract them into a private helper method. I can see these patterns in:\\n\\n1. `simpleString` method - has one QueryPlan.append call\\n2. `writePlans` method - has multiple QueryPlan.append calls\\n3. `stringWithStats` method - has two QueryPlan.append calls\\n\\nLet me create the helper method and refactor these usages:\\n\\n```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license a...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "rossler_attractor",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 273698.326587677,
    "time_apply_ms": 0,
    "total_tokens": 6038,
    "timestamp": "2025-08-17T02:22:59.571937",
    "query_prompt": "Replace the Lorenz system with the R\u00f6ssler attractor equations while keeping the rest of the visualizer unchanged.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a R\\u00f6ssler attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmat...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "gravity_multiplier",
    "method": "full_file_generation",
    "redundant_tokens": 146,
    "time_generate_ms": 316672.917842865,
    "time_apply_ms": 0,
    "total_tokens": 7903,
    "timestamp": "2025-08-17T02:23:36.283504",
    "query_prompt": "Every 10 points, increase gravity by 5%",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Flappy Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0e0f16;\\n      --panel: #141624;\\n      --text: #e9edf1;\\n      --muted: #aab3c6;\\n      --accent: #23d18b;\\n      --accent-2: #0098ff;\\n      --danger: #ff4966;\\n      --gold...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/QueryExecution.scala",
    "query_id": "qe_introduce_withPhase_helper",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 330802.7091026306,
    "time_apply_ms": 0,
    "total_tokens": 8238,
    "timestamp": "2025-08-17T02:24:03.423579",
    "query_prompt": "Introduce a private withPhase[T](phase: String)(block: => T): T that wraps executePhase and use it in the LazyTry blocks for optimization, planning, and executed plan creation to reduce boilerplate.",
    "response_data": "{\"full_file_output\": \"```scala\\n/*\\n * Licensed to the Apache Software Foundation (ASF) under one or more\\n * contributor license agreements.  See the NOTICE file distributed with\\n * this work for additional information regarding copyright ownership.\\n * The ASF licenses this file to You under the Apache License, Version 2.0\\n * (the \\\"License\\\"); you may not use this file except in compliance with\\n * the License.  You may obtain a copy of the License at\\n *\\n *    http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless requi...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/visualizer.cc",
    "query_id": "toggle_two_attractors",
    "method": "full_file_generation",
    "redundant_tokens": 0,
    "time_generate_ms": 194119.96006965637,
    "time_apply_ms": 0,
    "total_tokens": 6042,
    "timestamp": "2025-08-17T02:26:15.725710",
    "query_prompt": "Add a new command line option so that running with --rossler shows the R\u00f6ssler attractor, otherwise default to Lorenz.",
    "response_data": "{\"full_file_output\": \"```cpp\\n// visualizer.cpp\\n// Single-file SFML visualizer with generic 3D parametric simulation support\\n// and a Lorenz attractor demo.\\n// Controls:\\n//   Mouse drag: rotate camera\\n//   Mouse wheel: zoom\\n//   W/A/S/D or Arrow keys: pan\\n//   Space: pause/resume\\n//   R: reset view\\n//   C: clear trail\\n//   P: save screenshot (PNG)\\n//   +/- : change point size\\n//   [ ] : change trail length (max points)\\n//   1/2/3: toggle axes/grid/depth sort\\n//   Esc: quit\\n\\n#include <SFML/Graphics.hpp>\\n#include <cmath...\"}",
    "is_correct": true,
    "iterations": 1
  },
  {
    "benchmark_id": "benchmark",
    "model": "claude-opus-4",
    "file": "/Users/dhruvbhatia/CODE/misc/morph/coding-agent-bench/corpus/flappy-bird.html",
    "query_id": "cyberpunk_theme",
    "method": "full_file_generation",
    "redundant_tokens": 62,
    "time_generate_ms": 240573.34113121033,
    "time_apply_ms": 0,
    "total_tokens": 7899,
    "timestamp": "2025-08-17T02:27:39.452104",
    "query_prompt": "make the whole game cyberpunk themed",
    "response_data": "{\"full_file_output\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"utf-8\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\" />\\n  <title>Cyber Bird \\u2013 Single File</title>\\n  <style>\\n    /* ------------------------------\\n       Minimal, responsive styling\\n       ------------------------------ */\\n    :root {\\n      --bg: #0a0a0f;\\n      --panel: #1a1a2e;\\n      --text: #00ff88;\\n      --muted: #00cc66;\\n      --accent: #ff00ff;\\n      --accent-2: #00ffff;\\n      --danger: #ff0066;\\n      --gold:...\"}",
    "is_correct": true,
    "iterations": 1
  }
]